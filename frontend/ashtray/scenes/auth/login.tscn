[gd_scene load_steps=6 format=3 uid="uid://ccpaae6i0pp7s"]

[ext_resource type="Script" uid="uid://ce860vqogj8lx" path="res://scenes/auth/main.gd" id="1_c4dse"]
[ext_resource type="Texture2D" uid="uid://dsw2qsxn016qn" path="res://assets/textures/ui/login_background.png" id="1_lg6fp"]
[ext_resource type="Texture2D" uid="uid://drmq457ot388u" path="res://assets/textures/ui/confirm_button.png" id="2_cpvdj"]
[ext_resource type="Script" uid="uid://ybn3dc1rin1i" path="res://scenes/auth/login.gd" id="3_8wugm"]

[sub_resource type="GDScript" id="GDScript_c4dse"]
script/source = "extends Node

# A wrapper/helper class for the  Android Geolocation Plugin.
# The wrapper will check for permission requests on _ready() and will ask for location permissions 
# if they are not granted.
# The wrapper will then start the geolocation listener if the user grants location permissions.
#
# The wrapper exposes 2 signals that will help you work with the plugin:
# 1. android_location_permission_updated: Emitted when the user accepts/rejects the location permission request.
# 2. android_location_updated: Emitted periodically with the updated geolocation.
class_name AndroidGeolocationPlugin

var _plugin_name = \"GeolocationPlugin\"
var _android_plugin

# Emitted when the user accepts/rejects the location permission request.
signal android_location_permission_updated(granted: bool)

# Emitted periodically with the updated geolocation.
# The location_dictionary will contain either:
# 1. 2 keys: \"latitude\" and \"longitude\". Both keys have float values.
# 2. No keys: Failed to retrieve the location.
signal android_location_updated(location_dictionary: Dictionary)

func _ready():
	if Engine.has_singleton(_plugin_name):
		_android_plugin = Engine.get_singleton(_plugin_name)
		_android_plugin.connect(\"locationPermission\", self.on_location_permission)
		_android_plugin.connect(\"locationUpdate\", self.on_location_update)

		if !_has_location_permission():
			_request_location_permission()
			var granted: bool = await android_location_permission_updated
			if !granted:
				print(\"User didn't grant location permissions!\")
				return

		_start_geolocation_listener()

	else:
		printerr(\"Couldn't find plugin \" + _plugin_name)


# Pings the plugin and returns its name and version.
func _ping() -> String:
	if _android_plugin:
		return _android_plugin.ping()
	else:
		return \"Couldn't find plugin\" + _plugin_name


# Returns true if location permissions are granted.
# Returns false otherwise.
func _has_location_permission() -> bool:
	if _android_plugin:
		return _android_plugin.hasLocationPermission()
	else:
		return false


# Starts the location permission request.
# The result of the request will be published asynchronously on the android_location_permission_updated signal. 
func _request_location_permission() -> void:
	if _android_plugin:
		_android_plugin.requestLocationPermission()


# Returns true if the geolocation listener is running.
func _is_listening_for_geolocation_updates() -> bool:
	if _android_plugin:
		return _android_plugin.isListeningForGeolocationUpdates()
	else:
		return false


# Starts the geolocation listener if it is not running.
# Returns true if the listener is running successfully.
# Returns false if the listener failed to start.
func _start_geolocation_listener(minTimeMs: int = 5000, minDistanceM: float = 0.0) -> bool:
	if _android_plugin:
		return _android_plugin.startGeolocationListener(minTimeMs, minDistanceM)
	else:
		return false


# Stops the geolocation listener.
func _stop_geolocation_listener() -> void:
	if _android_plugin:
		_android_plugin.stopGeolocationListener()


func on_location_permission(granted: bool) -> void:
	android_location_permission_updated.emit(granted)


func on_location_update(location_dictionary: Dictionary) -> void:
	android_location_updated.emit(location_dictionary)
"

[node name="LoginScreen" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_c4dse")

[node name="TextureRect" type="TextureRect" parent="."]
texture_filter = 1
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("1_lg6fp")
expand_mode = 2
stretch_mode = 5

[node name="MarginContainer" type="MarginContainer" parent="."]
custom_minimum_size = Vector2(200, 0)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -100.0
offset_top = -75.0
offset_right = 100.0
offset_bottom = 75.0
grow_horizontal = 2
grow_vertical = 2

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
layout_mode = 2

[node name="Title" type="Label" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_stretch_ratio = 0.0
theme_override_font_sizes/font_size = 50
text = "Caquita"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Username" type="LineEdit" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
text = "example"
placeholder_text = "Username"

[node name="Password" type="LineEdit" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
text = "example"
placeholder_text = "Password"
secret = true

[node name="Login" type="Button" parent="MarginContainer/VBoxContainer"]
texture_filter = 1
custom_minimum_size = Vector2(0, 72)
layout_mode = 2
icon = ExtResource("2_cpvdj")
flat = true
icon_alignment = 1
expand_icon = true
script = ExtResource("3_8wugm")

[node name="AndroidGeolocationPlugin" type="Node" parent="."]
script = SubResource("GDScript_c4dse")
